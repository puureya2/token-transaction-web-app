{"version":3,"file":"static/js/119.26f0cc5b.chunk.js","mappings":"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","sources":["components/text/Title.tsx","components/text/TextField.tsx","views/login/LoginField.tsx","views/login/Login.tsx","store/hooks.ts","store/auth/selectors.ts"],"sourcesContent":["import { Box, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Title = ({ title }: Props) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: \"100%\",\r\n        width: { xs: \"100%\", md: \"100%\" },\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: { xs: \"center\", md: \"flex-start\" },\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h1\"\r\n        sx={{ mb: { xs: 2, md: 5 }, fontSize: { xs: 30, md: 48 } }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst CustomTextField = styled((props: any) => <TextField {...props} />)(\r\n  ({ theme }) => ({\r\n    \"& .MuiOutlinedInput-input::-webkit-input-placeholder\": {\r\n      color: theme.palette.text.secondary,\r\n      opacity: \"0.8\",\r\n    },\r\n    \"& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder\": {\r\n      color: theme.palette.text.secondary,\r\n      opacity: \"1\",\r\n    },\r\n    \"& .Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: theme.palette.grey[200],\r\n    },\r\n  })\r\n);\r\n\r\nexport default CustomTextField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Typography, Button, Stack } from \"@mui/material\";\r\nimport api from \"../../utils/api\";\r\nimport CustomTextField from \"../../components/text/TextField\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { setlogin } from \"../../store/auth\";\r\nimport {\r\n  selectErrorAuth,\r\n  selectLoginUser,\r\n  selectStatusAuth,\r\n  selectUpdateResponseAuth,\r\n} from \"../../store/auth/selectors\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { showAlert } from \"../../store/alert\";\r\n\r\nconst LoginField = () => {\r\n  const [username, setName] = useState(\"\");\r\n  const [usernameErr, setNameErr] = useState(false);\r\n  const [password, setPwd] = useState(\"\");\r\n  const [passwordErr, setPwdErr] = useState(false);\r\n  const loggedinUser = useAppSelector(selectLoginUser);\r\n  const errorAuth = useAppSelector(selectErrorAuth);\r\n  const updateResponse = useAppSelector(selectUpdateResponseAuth);\r\n  const statusAuth = useAppSelector(selectStatusAuth);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    let successData = true;\r\n    if (!username) {\r\n      successData = false;\r\n      setNameErr(true);\r\n    }\r\n    if (!password) {\r\n      successData = false;\r\n      setPwdErr(true);\r\n    }\r\n    if (successData) {\r\n      dispatch(setlogin({ username, password }));\r\n      setNameErr(false);\r\n      setPwdErr(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedinUser) {\r\n      navigate(\"/\");\r\n    }\r\n    if (!statusAuth && errorAuth !== \"\") {\r\n      dispatch(showAlert({ message: errorAuth, severity: \"error\" }));\r\n    }\r\n  }, [loggedinUser, updateResponse]);\r\n\r\n  return (\r\n    <>\r\n      <Stack>\r\n        <Box sx={{ textAlign: \"left\" }}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            fontWeight={600}\r\n            component=\"label\"\r\n            htmlFor=\"username\"\r\n            mb=\"5px\"\r\n          >\r\n            Username\r\n          </Typography>\r\n          <CustomTextField\r\n            id=\"username\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={username}\r\n            onChange={(e: any) => setName(e.target.value)}\r\n          />\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            component=\"label\"\r\n            htmlFor=\"username\"\r\n            color=\"error\"\r\n            display={usernameErr ? \"block\" : \"none\"}\r\n          >\r\n            Please add User Name\r\n          </Typography>\r\n        </Box>\r\n        <Box mt=\"25px\" sx={{ textAlign: \"left\" }}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            fontWeight={600}\r\n            component=\"label\"\r\n            htmlFor=\"password\"\r\n            mb=\"5px\"\r\n          >\r\n            Password\r\n          </Typography>\r\n          <CustomTextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={password}\r\n            onChange={(e: any) => setPwd(e.target.value)}\r\n          />\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            component=\"label\"\r\n            htmlFor=\"password\"\r\n            color=\"error\"\r\n            display={passwordErr ? \"block\" : \"none\"}\r\n          >\r\n            Please add Password\r\n          </Typography>\r\n        </Box>\r\n      </Stack>\r\n      <Box mt=\"25px\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          fullWidth\r\n          onClick={() => handleSubmit()}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginField;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Box, Card, Stack, Typography } from \"@mui/material\";\r\nimport Title from \"../../components/text/Title\";\r\nimport LoginField from \"./LoginField\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Box pb={\"110px\"}>\r\n      <Title title=\"Login\"></Title>\r\n      <Box>\r\n        <Grid container spacing={0} justifyContent=\"center\">\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={8}\r\n            lg={6}\r\n            xl={4}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Card\r\n              elevation={9}\r\n              sx={{ p: 4, zIndex: 1, width: \"100%\", maxWidth: \"500px\" }}\r\n            >\r\n              <LoginField />\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<any>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import type { RootState } from \"../store\";\r\n\r\nexport const selectLoginUser = (state: RootState) => state.auth.username;\r\nexport const selectErrorAuth = (state: RootState) => state.auth.errorAuth;\r\nexport const selectStatusAuth = (state: RootState) => state.auth.status;\r\nexport const selectUpdateResponseAuth = (state: RootState) =>\r\n  state.auth.updateResponse;\r\n"],"names":["_ref","title","_jsx","Box","sx","height","width","xs","md","display","alignItems","justifyContent","children","Typography","variant","mb","fontSize","styled","props","TextField","theme","color","palette","text","secondary","opacity","borderColor","grey","LoginField","username","setName","useState","usernameErr","setNameErr","password","setPwd","passwordErr","setPwdErr","loggedinUser","useAppSelector","selectLoginUser","errorAuth","selectErrorAuth","updateResponse","selectUpdateResponseAuth","statusAuth","selectStatusAuth","navigate","useNavigate","dispatch","useAppDispatch","useEffect","showAlert","message","severity","_jsxs","_Fragment","Stack","textAlign","fontWeight","component","htmlFor","CustomTextField","id","fullWidth","value","onChange","e","target","mt","type","Button","size","onClick","handleSubmit","successData","setlogin","Login","pb","Title","Grid","container","spacing","item","sm","lg","xl","Card","elevation","p","zIndex","maxWidth","useDispatch","useSelector","state","auth","status"],"sourceRoot":""}